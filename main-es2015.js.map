{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./angular-particle/angular-particle.d.ts.ParticlesComponent.html","./angular-particle/index.js","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/botones-contacto/botones-contacto.component.html","./src/app/botones-contacto/botones-contacto.component.ts","./src/app/collapser/collapser.component.html","./src/app/collapser/collapser.component.ts","./src/app/components/presentacion/presentacion.component.html","./src/app/components/presentacion/presentacion.component.ts","./src/app/marco-move/marco-move.component.html","./src/app/marco-move/marco-move.component.ts","./src/app/soul/soul.component.html","./src/app/soul/soul.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCXQ,gfAAmD,IAC/C;;;;;;;;;0QAAwF,iDADvF,mBAAiB,QAAtB,YAAmD,EAA9C,SAAiB,GACE,mBAAiB,SAArC,YAAwF,EAApE,SAAiB,mDAAC,mBAAuB,QAAC,mBAAyB,SAAvF,YAAwF,EAAlD,SAAuB,EAAC,SAAyB;;;;;;;;;;;;;;;;ACFnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgG;AACjD;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B;;AAEA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL,mBAAmB,EAAE,0BAA0B,EAAE,UAAU,EAAE,UAAU,EAAE;AACzE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE,yBAAyB,IAAI;AAClD,mBAAmB,EAAE;AACrB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,EAAE;AACrB,6BAA6B;AAC7B,KAAK;AACL,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,yCAAyC;AACjF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE,cAAc,0CAA0C;AAC9F,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,QAAQ;AAChD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,eAAe;AAC5C,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iD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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\n        <div [ngStyle]=\"style\" class=\"particles-container\">\n            <canvas d-particles [params]=\"params\" [style.width.%]=\"width\" [style.height.%]=\"height\"></canvas>\n        </div>\n    ","import { Component, Directive, ElementRef, HostListener, Input, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nvar ParticlesComponent = (function () {\r\n    function ParticlesComponent() {\r\n        this.width = 100;\r\n        this.height = 100;\r\n        this.style = {};\r\n    }\r\n    return ParticlesComponent;\r\n}());\r\nParticlesComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'particles',\r\n                template: \"\\n        <div [ngStyle]=\\\"style\\\" class=\\\"particles-container\\\">\\n            <canvas d-particles [params]=\\\"params\\\" [style.width.%]=\\\"width\\\" [style.height.%]=\\\"height\\\"></canvas>\\n        </div>\\n    \"\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesComponent.ctorParameters = function () { return []; };\r\nParticlesComponent.propDecorators = {\r\n    'width': [{ type: Input },],\r\n    'height': [{ type: Input },],\r\n    'params': [{ type: Input },],\r\n    'style': [{ type: Input },],\r\n};\r\n\r\nvar hexToRgb = function (hex) {\r\n    var /** @type {?} */ shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n    var /** @type {?} */ result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n};\r\nvar clamp = function (number, min, max) {\r\n    return Math.min(Math.max(number, min), max);\r\n};\r\nvar isInArray = function (value, array) {\r\n    return array.indexOf(value) > -1;\r\n};\r\nvar deepExtend = function (destination, source) {\r\n    for (var /** @type {?} */ property in source) {\r\n        if (source[property] &&\r\n            source[property].constructor &&\r\n            source[property].constructor === Object) {\r\n            destination[property] = destination[property] || {};\r\n            deepExtend(destination[property], source[property]);\r\n        }\r\n        else {\r\n            destination[property] = source[property];\r\n        }\r\n    }\r\n    return destination;\r\n};\r\nvar getColor = function (colorObject) {\r\n    var /** @type {?} */ color = {};\r\n    if (typeof (colorObject) == 'object') {\r\n        if (colorObject instanceof Array) {\r\n            var /** @type {?} */ selectedColor = colorObject[Math.floor(Math.random() * colorObject.length)];\r\n            color.rgb = hexToRgb(selectedColor);\r\n        }\r\n        else {\r\n            var r = colorObject.r, g = colorObject.g, b = colorObject.b;\r\n            if (r !== undefined && g !== undefined && b !== undefined) {\r\n                color.rgb = { r: r, g: g, b: b };\r\n            }\r\n            else {\r\n                var h = colorObject.h, s = colorObject.s, l = colorObject.l;\r\n                if (h !== undefined && g !== undefined && b !== undefined) {\r\n                    color.hsl = { h: h, s: s, l: l };\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (colorObject == 'random') {\r\n        color.rgb = {\r\n            r: (Math.floor(Math.random() * 255) + 1),\r\n            g: (Math.floor(Math.random() * 255) + 1),\r\n            b: (Math.floor(Math.random() * 255) + 1)\r\n        };\r\n    }\r\n    else if (typeof (colorObject) == 'string') {\r\n        color.rgb = hexToRgb(colorObject);\r\n    }\r\n    return color;\r\n};\r\nvar getDefaultParams = function () {\r\n    return {\r\n        particles: {\r\n            number: {\r\n                value: 100,\r\n                density: {\r\n                    enable: true,\r\n                    value_area: 800\r\n                }\r\n            },\r\n            color: {\r\n                value: '#FFF'\r\n            },\r\n            shape: {\r\n                type: 'circle',\r\n                stroke: {\r\n                    width: 0,\r\n                    color: '#000000'\r\n                },\r\n                polygon: {\r\n                    nb_sides: 5\r\n                },\r\n                image: {\r\n                    src: '',\r\n                    width: 100,\r\n                    height: 100\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 0.5,\r\n                random: false,\r\n                anim: {\r\n                    enable: true,\r\n                    speed: 1,\r\n                    opacity_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0,\r\n                    sync: false\r\n                }\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: '#FFF',\r\n                opacity: 0.6,\r\n                width: 1,\r\n                shadow: {\r\n                    enable: false,\r\n                    blur: 5,\r\n                    color: 'lime'\r\n                }\r\n            },\r\n            move: {\r\n                enable: true,\r\n                speed: 3,\r\n                direction: 'none',\r\n                random: false,\r\n                straight: false,\r\n                out_mode: 'out',\r\n                bounce: true,\r\n                attract: {\r\n                    enable: false,\r\n                    rotateX: 3000,\r\n                    rotateY: 3000\r\n                }\r\n            },\r\n            array: []\r\n        },\r\n        interactivity: {\r\n            detect_on: 'canvas',\r\n            events: {\r\n                onhover: {\r\n                    enable: true,\r\n                    mode: 'grab'\r\n                },\r\n                onclick: {\r\n                    enable: true,\r\n                    mode: 'push'\r\n                },\r\n                resize: true\r\n            },\r\n            modes: {\r\n                grab: {\r\n                    distance: 200,\r\n                    line_linked: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                bubble: {\r\n                    distance: 200,\r\n                    size: 80,\r\n                    duration: 0.4\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4\r\n                },\r\n                push: {\r\n                    particles_nb: 4\r\n                },\r\n                remove: {\r\n                    particles_nb: 2\r\n                }\r\n            },\r\n            mouse: {}\r\n        },\r\n        retina_detect: true\r\n    };\r\n};\r\n/**\r\n * @param {?} params\r\n * @param {?} tmp\r\n * @return {?}\r\n */\r\nfunction loadImg(params, tmp) {\r\n    var particles = this.params.particles;\r\n    tmp.img_error = undefined;\r\n    if (particles.shape.type == 'image' && particles.shape.image.src != '') {\r\n        if (tmp.img_type == 'svg') {\r\n            var /** @type {?} */ xhr_1 = new XMLHttpRequest();\r\n            xhr_1.open('GET', particles.shape.image.src);\r\n            xhr_1.onreadystatechange = function (data) {\r\n                if (xhr_1.readyState == 4) {\r\n                    if (xhr_1.status == 200) {\r\n                        tmp.source_svg = data.currentTarget.response;\r\n                        if (tmp.source_svg == undefined) {\r\n                            var /** @type {?} */ check = void 0;\r\n                            tmp.checkAnimFrame = requestAnimationFrame(check);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tmp.img_error = true;\r\n                        throw \"Error : image not found\";\r\n                    }\r\n                }\r\n            };\r\n            xhr_1.send();\r\n        }\r\n        else {\r\n            var /** @type {?} */ img_1 = new Image();\r\n            img_1.addEventListener('load', function () {\r\n                tmp.img_obj = img_1;\r\n                cancelAnimationFrame(tmp.checkAnimFrame);\r\n            });\r\n            img_1.src = particles.shape.image.src;\r\n        }\r\n    }\r\n    else {\r\n        tmp.img_error = true;\r\n        throw \"Error : no image.src\";\r\n    }\r\n}\r\n/**\r\n * @param {?} particle\r\n * @param {?} tmp\r\n * @return {?}\r\n */\r\nfunction createSvgImg(particle, tmp) {\r\n    var /** @type {?} */ svgXml = tmp.source_svg;\r\n    var /** @type {?} */ rgbHex = /#([0-9A-F]{3,6})/gi;\r\n    var /** @type {?} */ coloredSvgXml = svgXml.replace(rgbHex, function (m, r, g, b) {\r\n        var /** @type {?} */ color_value;\r\n        if (particle.color.rgb) {\r\n            var _a = particle.color.rgb, r_1 = _a.r, g_1 = _a.g, b_1 = _a.b;\r\n            color_value = \"rgba( \" + r_1 + \", \" + g_1 + \", \" + b_1 + \", \" + particle.opacity + \" )\";\r\n        }\r\n        else {\r\n            var _b = particle.color.hsl, h = _b.h, s = _b.s, l = _b.l;\r\n            color_value = \"rgba( \" + h + \", \" + s + \", \" + l + \", \" + particle.opacity + \" )\";\r\n        }\r\n        return color_value;\r\n    });\r\n    var /** @type {?} */ svg = new Blob([coloredSvgXml], {\r\n        type: 'image/svg+xml;charset=utf-8'\r\n    });\r\n    var /** @type {?} */ DOMURL = window.URL || window;\r\n    var /** @type {?} */ url = DOMURL.createObjectURL(svg);\r\n    var /** @type {?} */ img = new Image();\r\n    img.addEventListener('load', function () {\r\n        particle.img.obj = img;\r\n        particle.img.loaded = true;\r\n        DOMURL.revokeObjectURL(url);\r\n        tmp.count_svg++;\r\n    });\r\n    img.src = url;\r\n}\r\n\r\nvar CanvasManager$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     */\r\n    function CanvasManager$$1(_canvasParams, _params, _tmpParams) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._onWindowResize = this._onWindowResize.bind(this);\r\n        this._retinaInit();\r\n        this._canvasSize();\r\n        this.particlesManager = new ParticlesManager$$1(this._canvasParams, this._params, this._tmpParams);\r\n        this.particlesManager.particlesCreate();\r\n        this._densityAutoParticles();\r\n        var particles = this._params.particles;\r\n        particles.line_linked.color_rgb_line = hexToRgb(particles.line_linked.color);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype.draw = function () {\r\n        var particles = this._params.particles;\r\n        if (particles.shape.type == 'image') {\r\n            if (this._tmpParams.img_type == 'svg') {\r\n                if (this._tmpParams.count_svg >= particles.number.value) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    }\r\n                    else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this._tmpParams.img_obj != undefined) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    }\r\n                    else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.particlesManager.particlesDraw();\r\n            if (!particles.move.enable) {\r\n                cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n            }\r\n            else {\r\n                this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._densityAutoParticles = function () {\r\n        var particles = this._params.particles;\r\n        if (particles.number.density.enable) {\r\n            var /** @type {?} */ area = this._canvasParams.el.width * this._canvasParams.el.height / 1000;\r\n            if (this._tmpParams.retina) {\r\n                area = area / (this._canvasParams.pxratio * 2);\r\n            }\r\n            var /** @type {?} */ nb_particles = area * particles.number.value / particles.number.density.value_area;\r\n            var /** @type {?} */ missing_particles = particles.array.length - nb_particles;\r\n            if (missing_particles < 0) {\r\n                this.particlesManager.pushParticles(Math.abs(missing_particles));\r\n            }\r\n            else {\r\n                this.particlesManager.removeParticles(missing_particles);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._retinaInit = function () {\r\n        if (this._params.retina_detect && window.devicePixelRatio > 1) {\r\n            this._canvasParams.pxratio = window.devicePixelRatio;\r\n            this._tmpParams.retina = true;\r\n            this._canvasParams.width = this._canvasParams.el.offsetWidth * this._canvasParams.pxratio;\r\n            this._canvasParams.height = this._canvasParams.el.offsetHeight * this._canvasParams.pxratio;\r\n            this._params.particles.size.value = this._tmpParams.obj.size_value * this._canvasParams.pxratio;\r\n            this._params.particles.size.anim.speed = this._tmpParams.obj.size_anim_speed * this._canvasParams.pxratio;\r\n            this._params.particles.move.speed = this._tmpParams.obj.move_speed * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.distance = this._tmpParams.obj.line_linked_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.grab.distance = this._tmpParams.obj.mode_grab_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.distance = this._tmpParams.obj.mode_bubble_distance * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.width = this._tmpParams.obj.line_linked_width * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.size = this._tmpParams.obj.mode_bubble_size * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.repulse.distance = this._tmpParams.obj.mode_repulse_distance * this._canvasParams.pxratio;\r\n        }\r\n        else {\r\n            this._canvasParams.pxratio = 1;\r\n            this._tmpParams.retina = false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasClear = function () {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasPaint = function () {\r\n        this._canvasParams.ctx.fillRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasSize = function () {\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n        if (this._params && this._params.interactivity.events.resize) {\r\n            window.addEventListener('resize', this._onWindowResize);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._onWindowResize = function () {\r\n        this._canvasParams.width = this._canvasParams.el.offsetWidth;\r\n        this._canvasParams.height = this._canvasParams.el.offsetHeight;\r\n        if (this._tmpParams.retina) {\r\n            this._canvasParams.width *= this._canvasParams.pxratio;\r\n            this._canvasParams.height *= this._canvasParams.pxratio;\r\n        }\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesManager.particlesEmpty();\r\n            this.particlesManager.particlesCreate();\r\n            this.particlesManager.particlesDraw();\r\n            this._densityAutoParticles();\r\n        }\r\n        this._densityAutoParticles();\r\n    };\r\n    return CanvasManager$$1;\r\n}());\r\n\r\nvar ParticlesManager$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     */\r\n    function ParticlesManager$$1(_canvasParams, _params, _tmpParams) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._interaction = new ParticleInteraction();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesCreate = function () {\r\n        var _a = this._params.particles, color = _a.color, opacity = _a.opacity;\r\n        for (var /** @type {?} */ i = 0; i < this._params.particles.number.value; i++) {\r\n            this._params.particles.array.push(new Particle$$1(this._canvasParams, this._params, this._tmpParams, color, opacity.value));\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._particlesUpdate = function () {\r\n        var _this = this;\r\n        this._params.particles.array.forEach(function (particle, i) {\r\n            if (_this._params.particles.move.enable) {\r\n                var /** @type {?} */ ms = _this._params.particles.move.speed / 2;\r\n                particle.x += particle.vx * ms;\r\n                particle.y += particle.vy * ms;\r\n            }\r\n            if (_this._params.particles.opacity.anim.enable) {\r\n                if (particle.opacity_status == true) {\r\n                    if (particle.opacity >= _this._params.particles.opacity.value)\r\n                        particle.opacity_status = false;\r\n                    particle.opacity += particle.vo;\r\n                }\r\n                else {\r\n                    if (particle.opacity <= _this._params.particles.opacity.anim.opacity_min)\r\n                        particle.opacity_status = true;\r\n                    particle.opacity -= particle.vo;\r\n                }\r\n                if (particle.opacity < 0)\r\n                    particle.opacity = 0;\r\n            }\r\n            if (_this._params.particles.size.anim.enable) {\r\n                if (particle.size_status == true) {\r\n                    if (particle.radius >= _this._params.particles.size.value)\r\n                        particle.size_status = false;\r\n                    particle.radius += particle.vs;\r\n                }\r\n                else {\r\n                    if (particle.radius <= _this._params.particles.size.anim.size_min)\r\n                        particle.size_status = true;\r\n                    particle.radius -= particle.vs;\r\n                }\r\n                if (particle.radius < 0)\r\n                    particle.radius = 0;\r\n            }\r\n            var /** @type {?} */ new_pos;\r\n            if (_this._params.particles.move.out_mode == 'bounce') {\r\n                new_pos = {\r\n                    x_left: particle.radius,\r\n                    x_right: _this._canvasParams.width,\r\n                    y_top: particle.radius,\r\n                    y_bottom: _this._canvasParams.height\r\n                };\r\n            }\r\n            else {\r\n                new_pos = {\r\n                    x_left: -particle.radius,\r\n                    x_right: _this._canvasParams.width + particle.radius,\r\n                    y_top: -particle.radius,\r\n                    y_bottom: _this._canvasParams.height + particle.radius\r\n                };\r\n            }\r\n            if (particle.x - particle.radius > _this._canvasParams.width) {\r\n                particle.x = new_pos.x_left;\r\n                particle.y = Math.random() * _this._canvasParams.height;\r\n            }\r\n            else if (particle.x + particle.radius < 0) {\r\n                particle.x = new_pos.x_right;\r\n                particle.y = Math.random() * _this._canvasParams.height;\r\n            }\r\n            if (particle.y - particle.radius > _this._canvasParams.height) {\r\n                particle.y = new_pos.y_top;\r\n                particle.x = Math.random() * _this._canvasParams.width;\r\n            }\r\n            else if (particle.y + particle.radius < 0) {\r\n                particle.y = new_pos.y_bottom;\r\n                particle.x = Math.random() * _this._canvasParams.width;\r\n            }\r\n            switch (_this._params.particles.move.out_mode) {\r\n                case 'bounce':\r\n                    if (particle.x + particle.radius > _this._canvasParams.width)\r\n                        particle.vx = -particle.vx;\r\n                    else if (particle.x - particle.radius < 0)\r\n                        particle.vx = -particle.vx;\r\n                    if (particle.y + particle.radius > _this._canvasParams.height)\r\n                        particle.vy = -particle.vy;\r\n                    else if (particle.y - particle.radius < 0)\r\n                        particle.vy = -particle.vy;\r\n                    break;\r\n            }\r\n            if (isInArray('grab', _this._params.interactivity.events.onhover.mode)) {\r\n                _this._grabParticle(particle);\r\n            }\r\n            if (isInArray('bubble', _this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('bubble', _this._params.interactivity.events.onclick.mode)) {\r\n                _this._bubbleParticle(particle);\r\n            }\r\n            if (isInArray('repulse', _this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('repulse', _this._params.interactivity.events.onclick.mode)) {\r\n                _this._repulseParticle(particle);\r\n            }\r\n            if (_this._params.particles.line_linked.enable || _this._params.particles.move.attract.enable) {\r\n                for (var /** @type {?} */ j = i + 1; j < _this._params.particles.array.length; j++) {\r\n                    var /** @type {?} */ link = _this._params.particles.array[j];\r\n                    if (_this._params.particles.line_linked.enable)\r\n                        _this._interaction.linkParticles(particle, link, _this._params, _this._canvasParams);\r\n                    if (_this._params.particles.move.attract.enable)\r\n                        _this._interaction.attractParticles(particle, link, _this._params);\r\n                    if (_this._params.particles.move.bounce)\r\n                        _this._interaction.bounceParticles(particle, link);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesDraw = function () {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n        this._particlesUpdate();\r\n        this._params.particles.array.forEach(function (particle) {\r\n            particle.draw();\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesEmpty = function () {\r\n        this._params.particles.array = [];\r\n    };\r\n    /**\r\n     * @param {?} nb\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.removeParticles = function (nb) {\r\n        this._params.particles.array.splice(0, nb);\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesDraw();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} nb\r\n     * @param {?=} pos\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.pushParticles = function (nb, pos) {\r\n        this._tmpParams.pushing = true;\r\n        for (var /** @type {?} */ i = 0; i < nb; i++) {\r\n            this._params.particles.array.push(new Particle$$1(this._canvasParams, this._params, this._tmpParams, this._params.particles.color, this._params.particles.opacity.value, {\r\n                x: pos ? pos.pos_x : Math.random() * this._canvasParams.width,\r\n                y: pos ? pos.pos_y : Math.random() * this._canvasParams.height\r\n            }));\r\n            if (i == nb - 1) {\r\n                if (!this._params.particles.move.enable) {\r\n                    this.particlesDraw();\r\n                }\r\n                this._tmpParams.pushing = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._bubbleParticle = function (particle) {\r\n        var _this = this;\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onhover.mode)) {\r\n            var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            var /** @type {?} */ ratio = 1 - dist_mouse / this._params.interactivity.modes.bubble.distance;\r\n            var /** @type {?} */ init = function () {\r\n                particle.opacity_bubble = particle.opacity;\r\n                particle.radius_bubble = particle.radius;\r\n            };\r\n            if (dist_mouse <= this._params.interactivity.modes.bubble.distance) {\r\n                if (ratio >= 0 && this._params.interactivity.status == 'mousemove') {\r\n                    if (this._params.interactivity.modes.bubble.size != this._params.particles.size.value) {\r\n                        if (this._params.interactivity.modes.bubble.size > this._params.particles.size.value) {\r\n                            var /** @type {?} */ size = particle.radius + (this._params.interactivity.modes.bubble.size * ratio);\r\n                            if (size >= 0) {\r\n                                particle.radius_bubble = size;\r\n                            }\r\n                        }\r\n                        else {\r\n                            var /** @type {?} */ dif = particle.radius - this._params.interactivity.modes.bubble.size;\r\n                            var /** @type {?} */ size = particle.radius - (dif * ratio);\r\n                            if (size > 0) {\r\n                                particle.radius_bubble = size;\r\n                            }\r\n                            else {\r\n                                particle.radius_bubble = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this._params.interactivity.modes.bubble.opacity != this._params.particles.opacity.value) {\r\n                        if (this._params.interactivity.modes.bubble.opacity > this._params.particles.opacity.value) {\r\n                            var /** @type {?} */ opacity = this._params.interactivity.modes.bubble.opacity * ratio;\r\n                            if (opacity > particle.opacity && opacity <= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        }\r\n                        else {\r\n                            var /** @type {?} */ opacity = particle.opacity - (this._params.particles.opacity.value - this._params.interactivity.modes.bubble.opacity) * ratio;\r\n                            if (opacity < particle.opacity && opacity >= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                init();\r\n            }\r\n            if (this._params.interactivity.status == 'mouseleave') {\r\n                init();\r\n            }\r\n        }\r\n        else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onclick.mode)) {\r\n            if (this._tmpParams.bubble_clicking) {\r\n                var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.click_pos_x;\r\n                var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.click_pos_y;\r\n                var /** @type {?} */ dist_mouse_1 = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n                var /** @type {?} */ time_spent_1 = (new Date().getTime() - this._params.interactivity.mouse.click_time) / 1000;\r\n                if (time_spent_1 > this._params.interactivity.modes.bubble.duration) {\r\n                    this._tmpParams.bubble_duration_end = true;\r\n                }\r\n                if (time_spent_1 > this._params.interactivity.modes.bubble.duration * 2) {\r\n                    this._tmpParams.bubble_clicking = false;\r\n                    this._tmpParams.bubble_duration_end = false;\r\n                }\r\n                var /** @type {?} */ process = function (bubble_param, particles_param, p_obj_bubble, p_obj, id) {\r\n                    if (bubble_param != particles_param) {\r\n                        if (!_this._tmpParams.bubble_duration_end) {\r\n                            if (dist_mouse_1 <= _this._params.interactivity.modes.bubble.distance) {\r\n                                var /** @type {?} */ obj = void 0;\r\n                                if (p_obj_bubble != undefined) {\r\n                                    obj = p_obj_bubble;\r\n                                }\r\n                                else {\r\n                                    obj = p_obj;\r\n                                }\r\n                                if (obj != bubble_param) {\r\n                                    var /** @type {?} */ value = p_obj - (time_spent_1 * (p_obj - bubble_param) / _this._params.interactivity.modes.bubble.duration);\r\n                                    if (id == 'size')\r\n                                        particle.radius_bubble = value;\r\n                                    if (id == 'opacity')\r\n                                        particle.opacity_bubble = value;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = undefined;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = undefined;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (p_obj_bubble != undefined) {\r\n                                var /** @type {?} */ value_tmp = p_obj - (time_spent_1 * (p_obj - bubble_param) / _this._params.interactivity.modes.bubble.duration);\r\n                                var /** @type {?} */ dif = bubble_param - value_tmp;\r\n                                var /** @type {?} */ value = bubble_param + dif;\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = value;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = value;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                if (this._tmpParams.bubble_clicking) {\r\n                    process(this._params.interactivity.modes.bubble.size, this._params.particles.size.value, particle.radius_bubble, particle.radius, 'size');\r\n                    process(this._params.interactivity.modes.bubble.opacity, this._params.particles.opacity.value, particle.opacity_bubble, particle.opacity, 'opacity');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._repulseParticle = function (particle) {\r\n        var _this = this;\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onhover.mode) &&\r\n            this._params.interactivity.status == 'mousemove') {\r\n            var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            var /** @type {?} */ normVec = { x: dx_mouse / dist_mouse, y: dy_mouse / dist_mouse };\r\n            var /** @type {?} */ repulseRadius = this._params.interactivity.modes.repulse.distance;\r\n            var /** @type {?} */ velocity = 100;\r\n            var /** @type {?} */ repulseFactor = clamp((1 / repulseRadius) * (-1 * Math.pow(dist_mouse / repulseRadius, 2) + 1) * repulseRadius * velocity, 0, 50);\r\n            var /** @type {?} */ pos = {\r\n                x: particle.x + normVec.x * repulseFactor,\r\n                y: particle.y + normVec.y * repulseFactor\r\n            };\r\n            if (this._params.particles.move.out_mode == 'bounce') {\r\n                if (pos.x - particle.radius > 0 && pos.x + particle.radius < this._canvasParams.width)\r\n                    particle.x = pos.x;\r\n                if (pos.y - particle.radius > 0 && pos.y + particle.radius < this._canvasParams.height)\r\n                    particle.y = pos.y;\r\n            }\r\n            else {\r\n                particle.x = pos.x;\r\n                particle.y = pos.y;\r\n            }\r\n        }\r\n        else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onclick.mode)) {\r\n            if (!this._tmpParams.repulse_finish) {\r\n                this._tmpParams.repulse_count++;\r\n                if (this._tmpParams.repulse_count == this._params.particles.array.length)\r\n                    this._tmpParams.repulse_finish = true;\r\n            }\r\n            if (this._tmpParams.repulse_clicking) {\r\n                var /** @type {?} */ repulseRadius = Math.pow(this._params.interactivity.modes.repulse.distance / 6, 3);\r\n                var /** @type {?} */ dx_1 = this._params.interactivity.mouse.click_pos_x - particle.x;\r\n                var /** @type {?} */ dy_1 = this._params.interactivity.mouse.click_pos_y - particle.y;\r\n                var /** @type {?} */ d = dx_1 * dx_1 + dy_1 * dy_1;\r\n                var /** @type {?} */ force_1 = -repulseRadius / d * 1;\r\n                var /** @type {?} */ process = function () {\r\n                    var /** @type {?} */ f = Math.atan2(dy_1, dx_1);\r\n                    particle.vx = force_1 * Math.cos(f);\r\n                    particle.vy = force_1 * Math.sin(f);\r\n                    if (_this._params.particles.move.out_mode == 'bounce') {\r\n                        var /** @type {?} */ pos = {\r\n                            x: particle.x + particle.vx,\r\n                            y: particle.y + particle.vy\r\n                        };\r\n                        if (pos.x + particle.radius > _this._canvasParams.width)\r\n                            particle.vx = -particle.vx;\r\n                        else if (pos.x - particle.radius < 0)\r\n                            particle.vx = -particle.vx;\r\n                        if (pos.y + particle.radius > _this._canvasParams.height)\r\n                            particle.vy = -particle.vy;\r\n                        else if (pos.y - particle.radius < 0)\r\n                            particle.vy = -particle.vy;\r\n                    }\r\n                };\r\n                if (d <= repulseRadius) {\r\n                    process();\r\n                }\r\n            }\r\n            else {\r\n                if (this._tmpParams.repulse_clicking == false) {\r\n                    particle.vx = particle.vx_i;\r\n                    particle.vy = particle.vy_i;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._grabParticle = function (particle) {\r\n        var _a = this._params, interactivity = _a.interactivity, particles = _a.particles;\r\n        if (interactivity.events.onhover.enable &&\r\n            interactivity.status == 'mousemove') {\r\n            var /** @type {?} */ dx_mouse = particle.x - interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            if (dist_mouse <= interactivity.modes.grab.distance) {\r\n                var grab = interactivity.modes.grab;\r\n                var /** @type {?} */ opacity_line = grab.line_linked.opacity - (dist_mouse / (1 / grab.line_linked.opacity)) / grab.distance;\r\n                if (opacity_line > 0) {\r\n                    var /** @type {?} */ color_line = particles.line_linked.color_rgb_line;\r\n                    var r = color_line.r, g = color_line.g, b = color_line.b;\r\n                    this._canvasParams.ctx.strokeStyle = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity_line + \" )\";\r\n                    this._canvasParams.ctx.lineWidth = particles.line_linked.width;\r\n                    this._canvasParams.ctx.beginPath();\r\n                    this._canvasParams.ctx.moveTo(particle.x, particle.y);\r\n                    this._canvasParams.ctx.lineTo(interactivity.mouse.pos_x, interactivity.mouse.pos_y);\r\n                    this._canvasParams.ctx.stroke();\r\n                    this._canvasParams.ctx.closePath();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return ParticlesManager$$1;\r\n}());\r\n\r\nvar Particle$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     * @param {?=} color\r\n     * @param {?=} opacity\r\n     * @param {?=} position\r\n     */\r\n    function Particle$$1(_canvasParams, _params, _tmpParams, color, opacity, position) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._setupSize();\r\n        this._setupPosition(position);\r\n        this._setupColor(color);\r\n        this._setupOpacity();\r\n        this._setupAnimation();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupSize = function () {\r\n        this.radius = (this._params.particles.size.random ? Math.random() : 1) * this._params.particles.size.value;\r\n        if (this._params.particles.size.anim.enable) {\r\n            this.size_status = false;\r\n            this.vs = this._params.particles.size.anim.speed / 100;\r\n            if (!this._params.particles.size.anim.sync)\r\n                this.vs = this.vs * Math.random();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} position\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupPosition = function (position) {\r\n        this.x = position ? position.x : Math.random() * this._canvasParams.width;\r\n        this.y = position ? position.y : Math.random() * this._canvasParams.height;\r\n        if (this.x > this._canvasParams.width - this.radius * 2) {\r\n            this.x = this.x - this.radius;\r\n        }\r\n        else if (this.x < this.radius * 2) {\r\n            this.x = this.x + this.radius;\r\n        }\r\n        if (this.y > this._canvasParams.height - this.radius * 2) {\r\n            this.y = this.y - this.radius;\r\n        }\r\n        else if (this.y < this.radius * 2) {\r\n            this.y = this.y + this.radius;\r\n        }\r\n        if (this._params.particles.move.bounce) {\r\n            this._checkOverlap(this, position);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?=} position\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._checkOverlap = function (p1, position) {\r\n        var _this = this;\r\n        var particles = this._params.particles;\r\n        particles.array.forEach(function (particle) {\r\n            var /** @type {?} */ p2 = particle;\r\n            var /** @type {?} */ dx = p1.x - p2.x;\r\n            var /** @type {?} */ dy = p1.y - p2.y;\r\n            var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n            if (dist <= p1.radius + p2.radius) {\r\n                p1.x = position ? position.x : Math.random() * _this._canvasParams.width;\r\n                p1.y = position ? position.y : Math.random() * _this._canvasParams.height;\r\n                _this._checkOverlap(p1);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?=} color\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupColor = function (color) {\r\n        this.color = getColor(color.value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupOpacity = function () {\r\n        this.opacity = (this._params.particles.opacity.random ? Math.random() : 1) * this._params.particles.opacity.value;\r\n        if (this._params.particles.opacity.anim.enable) {\r\n            this.opacity_status = false;\r\n            this.vo = this._params.particles.opacity.anim.speed / 100;\r\n            if (!this._params.particles.opacity.anim.sync) {\r\n                this.vo = this.vo * Math.random();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupAnimation = function () {\r\n        var /** @type {?} */ velbase = null;\r\n        switch (this._params.particles.move.direction) {\r\n            case 'top':\r\n                velbase = { x: 0, y: -1 };\r\n                break;\r\n            case 'top-right':\r\n                velbase = { x: 0.5, y: -0.5 };\r\n                break;\r\n            case 'right':\r\n                velbase = { x: 1, y: 0 };\r\n                break;\r\n            case 'bottom-right':\r\n                velbase = { x: 0.5, y: 0.5 };\r\n                break;\r\n            case 'bottom':\r\n                velbase = { x: 0, y: 1 };\r\n                break;\r\n            case 'bottom-left':\r\n                velbase = { x: -0.5, y: 1 };\r\n                break;\r\n            case 'left':\r\n                velbase = { x: -1, y: 0 };\r\n                break;\r\n            case 'top-left':\r\n                velbase = { x: -0.5, y: -0.5 };\r\n                break;\r\n            default:\r\n                velbase = { x: 0, y: 0 };\r\n                break;\r\n        }\r\n        if (this._params.particles.move.straight) {\r\n            this.vx = velbase.x;\r\n            this.vy = velbase.y;\r\n            if (this._params.particles.move.random) {\r\n                this.vx = this.vx * (Math.random());\r\n                this.vy = this.vy * (Math.random());\r\n            }\r\n        }\r\n        else {\r\n            this.vx = velbase.x + Math.random() - 0.5;\r\n            this.vy = velbase.y + Math.random() - 0.5;\r\n        }\r\n        this.vx_i = this.vx;\r\n        this.vy_i = this.vy;\r\n        var /** @type {?} */ shape_type = this._params.particles.shape.type;\r\n        if (typeof (shape_type) == 'object') {\r\n            if (shape_type instanceof Array) {\r\n                var /** @type {?} */ shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\r\n                this.shape = shape_selected;\r\n            }\r\n        }\r\n        else {\r\n            this.shape = shape_type;\r\n        }\r\n        if (this.shape == 'image') {\r\n            var /** @type {?} */ sh = this._params.particles.shape;\r\n            this.img = {\r\n                src: sh.image.src,\r\n                ratio: sh.image.width / sh.image.height\r\n            };\r\n            if (!this.img.ratio)\r\n                this.img.ratio = 1;\r\n            if (this._tmpParams.img_type == 'svg' && this._tmpParams.source_svg != undefined) {\r\n                createSvgImg(this, this._tmpParams);\r\n                if (this._tmpParams.pushing) {\r\n                    this.img.loaded = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} c\r\n     * @param {?} startX\r\n     * @param {?} startY\r\n     * @param {?} sideLength\r\n     * @param {?} sideCountNumerator\r\n     * @param {?} sideCountDenominator\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._drawShape = function (c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator) {\r\n        var /** @type {?} */ sideCount = sideCountNumerator * sideCountDenominator;\r\n        var /** @type {?} */ decimalSides = sideCountNumerator / sideCountDenominator;\r\n        var /** @type {?} */ interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\r\n        var /** @type {?} */ interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180;\r\n        c.save();\r\n        c.beginPath();\r\n        c.translate(startX, startY);\r\n        c.moveTo(0, 0);\r\n        for (var /** @type {?} */ i = 0; i < sideCount; i++) {\r\n            c.lineTo(sideLength, 0);\r\n            c.translate(sideLength, 0);\r\n            c.rotate(interiorAngle);\r\n        }\r\n        c.fill();\r\n        c.restore();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype.draw = function () {\r\n        var _this = this;\r\n        var particles = this._params.particles;\r\n        var /** @type {?} */ radius;\r\n        if (this.radius_bubble != undefined) {\r\n            radius = this.radius_bubble;\r\n        }\r\n        else {\r\n            radius = this.radius;\r\n        }\r\n        var /** @type {?} */ opacity;\r\n        if (this.opacity_bubble != undefined) {\r\n            opacity = this.opacity_bubble;\r\n        }\r\n        else {\r\n            opacity = this.opacity;\r\n        }\r\n        var /** @type {?} */ color_value;\r\n        if (this.color.rgb) {\r\n            var _a = this.color.rgb, r = _a.r, g = _a.g, b = _a.b;\r\n            color_value = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity + \" )\";\r\n        }\r\n        else {\r\n            var _b = this.color.hsl, h = _b.h, s = _b.s, l = _b.l;\r\n            color_value = \"hsla( \" + h + \", \" + s + \", \" + l + \", \" + opacity + \" )\";\r\n        }\r\n        this._canvasParams.ctx.fillStyle = color_value;\r\n        this._canvasParams.ctx.beginPath();\r\n        switch (this.shape) {\r\n            case 'circle':\r\n                this._canvasParams.ctx.arc(this.x, this.y, radius, 0, Math.PI * 2, false);\r\n                break;\r\n            case 'edge':\r\n                this._canvasParams.ctx.rect(this.x - radius, this.y - radius, radius * 2, radius * 2);\r\n                break;\r\n            case 'triangle':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius, this.y + radius / 1.66, radius * 2, 3, 2);\r\n                break;\r\n            case 'polygon':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius / (this._params.particles.shape.polygon.nb_sides / 3.5), this.y - radius / (2.66 / 3.5), radius * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3), this._params.particles.shape.polygon.nb_sides, 1);\r\n                break;\r\n            case 'star':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius * 2 / (this._params.particles.shape.polygon.nb_sides / 4), this.y - radius / (2 * 2.66 / 3.5), radius * 2 * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3), this._params.particles.shape.polygon.nb_sides, 2);\r\n                break;\r\n            case 'image':\r\n                var /** @type {?} */ draw = function (img_obj) {\r\n                    _this._canvasParams.ctx.drawImage(img_obj, _this.x - radius, _this.y - radius, radius * 2, radius * 2 / _this.img.ratio);\r\n                };\r\n                var /** @type {?} */ img_obj = void 0;\r\n                if (this._tmpParams.img_type == 'svg') {\r\n                    img_obj = this.img.obj;\r\n                }\r\n                else {\r\n                    img_obj = this._tmpParams.img_obj;\r\n                }\r\n                if (img_obj)\r\n                    draw(img_obj);\r\n                break;\r\n        }\r\n        this._canvasParams.ctx.closePath();\r\n        if (this._params.particles.shape.stroke.width > 0) {\r\n            this._canvasParams.ctx.strokeStyle = this._params.particles.shape.stroke.color;\r\n            this._canvasParams.ctx.lineWidth = this._params.particles.shape.stroke.width;\r\n            this._canvasParams.ctx.stroke();\r\n        }\r\n        this._canvasParams.ctx.fill();\r\n    };\r\n    return Particle$$1;\r\n}());\r\n\r\nvar ParticleInteraction = (function () {\r\n    function ParticleInteraction() {\r\n    }\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @param {?} params\r\n     * @param {?} canvasParams\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.linkParticles = function (p1, p2, params, canvasParams) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        var line_linked = params.particles.line_linked;\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            var /** @type {?} */ opacity_line = params.particles.line_linked.opacity - (dist / (1 / params.particles.line_linked.opacity)) / params.particles.line_linked.distance;\r\n            if (opacity_line > 0) {\r\n                var /** @type {?} */ color_line = params.particles.line_linked.color_rgb_line;\r\n                var r = color_line.r, g = color_line.g, b = color_line.b;\r\n                canvasParams.ctx.save();\r\n                canvasParams.ctx.strokeStyle = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity_line + \" )\";\r\n                canvasParams.ctx.lineWidth = params.particles.line_linked.width;\r\n                canvasParams.ctx.beginPath();\r\n                if (line_linked.shadow.enable) {\r\n                    canvasParams.ctx.shadowBlur = line_linked.shadow.blur;\r\n                    canvasParams.ctx.shadowColor = line_linked.shadow.color;\r\n                }\r\n                canvasParams.ctx.moveTo(p1.x, p1.y);\r\n                canvasParams.ctx.lineTo(p2.x, p2.y);\r\n                canvasParams.ctx.stroke();\r\n                canvasParams.ctx.closePath();\r\n                canvasParams.ctx.restore();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.attractParticles = function (p1, p2, params) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            var /** @type {?} */ ax = dx / (params.particles.move.attract.rotateX * 1000);\r\n            var /** @type {?} */ ay = dy / (params.particles.move.attract.rotateY * 1000);\r\n            p1.vx -= ax;\r\n            p1.vy -= ay;\r\n            p2.vx += ax;\r\n            p2.vy += ay;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.bounceParticles = function (p1, p2) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        var /** @type {?} */ dist_p = p1.radius + p2.radius;\r\n        if (dist <= dist_p) {\r\n            p1.vx = -p1.vx;\r\n            p1.vy = -p1.vy;\r\n            p2.vx = -p2.vx;\r\n            p2.vy = -p2.vy;\r\n        }\r\n    };\r\n    return ParticleInteraction;\r\n}());\r\n\r\nvar ParticlesDirective = (function () {\r\n    /**\r\n     * @param {?} el\r\n     */\r\n    function ParticlesDirective(el) {\r\n        this.el = el;\r\n        this._tmpParams = {};\r\n    }\r\n    Object.defineProperty(ParticlesDirective.prototype, \"params\", {\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        set: function (value) {\r\n            var /** @type {?} */ defaultParams = getDefaultParams();\r\n            this._params = deepExtend(defaultParams, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.ngAfterViewInit = function () {\r\n        this._canvasParams = {\r\n            el: this.el.nativeElement,\r\n            ctx: this.el.nativeElement.getContext('2d'),\r\n            width: this.el.nativeElement.offsetWidth,\r\n            height: this.el.nativeElement.offsetHeight\r\n        };\r\n        this._tmpParams.obj = {\r\n            size_value: this._params.particles.size.value,\r\n            size_anim_speed: this._params.particles.size.anim.speed,\r\n            move_speed: this._params.particles.move.speed,\r\n            line_linked_distance: this._params.particles.line_linked.distance,\r\n            line_linked_width: this._params.particles.line_linked.width,\r\n            mode_grab_distance: this._params.interactivity.modes.grab.distance,\r\n            mode_bubble_distance: this._params.interactivity.modes.bubble.distance,\r\n            mode_bubble_size: this._params.interactivity.modes.bubble.size,\r\n            mode_repulse_distance: this._params.interactivity.modes.repulse.distance\r\n        };\r\n        this._params.interactivity.el = (this._params.interactivity.detect_on == 'window') ? window : this._canvasParams.el;\r\n        if (isInArray('image', this._params.particles.shape.type)) {\r\n            this._tmpParams.img_type = this._params.particles.shape.image.src.substr(this._params.particles.shape.image.src.length - 3);\r\n            loadImg(this._params, this._tmpParams);\r\n        }\r\n        this._canvasManager = new CanvasManager$$1(this._canvasParams, this._params, this._tmpParams);\r\n        this._canvasManager.draw();\r\n    };\r\n    /**\r\n     * Mouse move event\r\n    \\@param event\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onMouseMove = function (event) {\r\n        var interactivity = this._params.interactivity;\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n            var /** @type {?} */ pos = void 0;\r\n            if (interactivity.el == window) {\r\n                pos = {\r\n                    x: event.clientX,\r\n                    y: event.clientY\r\n                };\r\n            }\r\n            else {\r\n                pos = {\r\n                    x: event.offsetX || event.clientX,\r\n                    y: event.offsetY || event.clientY\r\n                };\r\n            }\r\n            interactivity.mouse.pos_x = pos.x;\r\n            interactivity.mouse.pos_y = pos.y;\r\n            if (this._tmpParams.retina) {\r\n                interactivity.mouse.pos_x *= this._canvasParams.pxratio;\r\n                interactivity.mouse.pos_y *= this._canvasParams.pxratio;\r\n            }\r\n            interactivity.status = 'mousemove';\r\n        }\r\n    };\r\n    /**\r\n     * Mouse leave event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onMouseLeave = function () {\r\n        var interactivity = this._params.interactivity;\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n            interactivity.mouse.pos_x = null;\r\n            interactivity.mouse.pos_y = null;\r\n            interactivity.status = 'mouseleave';\r\n        }\r\n    };\r\n    /**\r\n     * Click event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onClick = function () {\r\n        var _this = this;\r\n        var _a = this._params, interactivity = _a.interactivity, particles = _a.particles;\r\n        if (interactivity.events.onclick.enable) {\r\n            interactivity.mouse.click_pos_x = interactivity.mouse.pos_x;\r\n            interactivity.mouse.click_pos_y = interactivity.mouse.pos_y;\r\n            interactivity.mouse.click_time = new Date().getTime();\r\n            switch (interactivity.events.onclick.mode) {\r\n                case 'push':\r\n                    if (particles.move.enable) {\r\n                        this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                    }\r\n                    else {\r\n                        if (interactivity.modes.push.particles_nb == 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                        }\r\n                        else if (interactivity.modes.push.particles_nb > 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'remove':\r\n                    this._canvasManager.particlesManager.removeParticles(interactivity.modes.remove.particles_nb);\r\n                    break;\r\n                case 'bubble':\r\n                    this._tmpParams.bubble_clicking = true;\r\n                    break;\r\n                case 'repulse':\r\n                    this._tmpParams.repulse_clicking = true;\r\n                    this._tmpParams.repulse_count = 0;\r\n                    this._tmpParams.repulse_finish = false;\r\n                    setTimeout(function () {\r\n                        _this._tmpParams.repulse_clicking = false;\r\n                    }, interactivity.modes.repulse.duration * 1000);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ParticlesDirective;\r\n}());\r\nParticlesDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[d-particles]'\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesDirective.ctorParameters = function () { return [\r\n    { type: ElementRef, },\r\n]; };\r\nParticlesDirective.propDecorators = {\r\n    'params': [{ type: Input },],\r\n    'onMouseMove': [{ type: HostListener, args: ['mousemove', ['$event'],] },],\r\n    'onMouseLeave': [{ type: HostListener, args: ['mouseleave',] },],\r\n    'onClick': [{ type: HostListener, args: ['click',] },],\r\n};\r\n\r\nvar ParticlesModule = (function () {\r\n    function ParticlesModule() {\r\n    }\r\n    return ParticlesModule;\r\n}());\r\nParticlesModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                declarations: [\r\n                    ParticlesComponent,\r\n                    ParticlesDirective\r\n                ],\r\n                exports: [\r\n                    ParticlesComponent,\r\n                    ParticlesDirective\r\n                ]\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesModule.ctorParameters = function () { return []; };\r\n\r\nexport { ParticlesModule, ParticlesComponent, ParticlesDirective };\r\n","<script>function hexToRgb(e) { var a = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i; e = e.replace(a, function (e, a, t, i) { return a + a + t + t + i + i }); var t = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e); return t ? { r: parseInt(t[1], 16), g: parseInt(t[2], 16), b: parseInt(t[3], 16) } : null } function clamp(e, a, t) { return Math.min(Math.max(e, a), t) } function isInArray(e, a) { return a.indexOf(e) > -1 } var pJS = function (e, a) { var t = document.querySelector(\"#\" + e + \" > .particles-js-canvas-el\"); this.pJS = { canvas: { el: t, w: t.offsetWidth, h: t.offsetHeight }, particles: { number: { value: 400, density: { enable: !0, value_area: 800 } }, color: { value: \"#fff\" }, shape: { type: \"circle\", stroke: { width: 0, color: \"#ff0000\" }, polygon: { nb_sides: 5 }, image: { src: \"\", width: 100, height: 100 } }, opacity: { value: 1, random: !1, anim: { enable: !1, speed: 2, opacity_min: 0, sync: !1 } }, size: { value: 20, random: !1, anim: { enable: !1, speed: 20, size_min: 0, sync: !1 } }, line_linked: { enable: !0, distance: 100, color: \"#fff\", opacity: 1, width: 1 }, move: { enable: !0, speed: 2, direction: \"none\", random: !1, straight: !1, out_mode: \"out\", bounce: !1, attract: { enable: !1, rotateX: 3e3, rotateY: 3e3 } }, array: [] }, interactivity: { detect_on: \"canvas\", events: { onhover: { enable: !0, mode: \"grab\" }, onclick: { enable: !0, mode: \"push\" }, resize: !0 }, modes: { grab: { distance: 100, line_linked: { opacity: 1 } }, bubble: { distance: 200, size: 80, duration: .4 }, repulse: { distance: 200, duration: .4 }, push: { particles_nb: 4 }, remove: { particles_nb: 2 } }, mouse: {} }, retina_detect: !1, fn: { interact: {}, modes: {}, vendors: {} }, tmp: {} }; var i = this.pJS; a && Object.deepExtend(i, a), i.tmp.obj = { size_value: i.particles.size.value, size_anim_speed: i.particles.size.anim.speed, move_speed: i.particles.move.speed, line_linked_distance: i.particles.line_linked.distance, line_linked_width: i.particles.line_linked.width, mode_grab_distance: i.interactivity.modes.grab.distance, mode_bubble_distance: i.interactivity.modes.bubble.distance, mode_bubble_size: i.interactivity.modes.bubble.size, mode_repulse_distance: i.interactivity.modes.repulse.distance }, i.fn.retinaInit = function () { i.retina_detect && window.devicePixelRatio > 1 ? (i.canvas.pxratio = window.devicePixelRatio, i.tmp.retina = !0) : (i.canvas.pxratio = 1, i.tmp.retina = !1), i.canvas.w = i.canvas.el.offsetWidth * i.canvas.pxratio, i.canvas.h = i.canvas.el.offsetHeight * i.canvas.pxratio, i.particles.size.value = i.tmp.obj.size_value * i.canvas.pxratio, i.particles.size.anim.speed = i.tmp.obj.size_anim_speed * i.canvas.pxratio, i.particles.move.speed = i.tmp.obj.move_speed * i.canvas.pxratio, i.particles.line_linked.distance = i.tmp.obj.line_linked_distance * i.canvas.pxratio, i.interactivity.modes.grab.distance = i.tmp.obj.mode_grab_distance * i.canvas.pxratio, i.interactivity.modes.bubble.distance = i.tmp.obj.mode_bubble_distance * i.canvas.pxratio, i.particles.line_linked.width = i.tmp.obj.line_linked_width * i.canvas.pxratio, i.interactivity.modes.bubble.size = i.tmp.obj.mode_bubble_size * i.canvas.pxratio, i.interactivity.modes.repulse.distance = i.tmp.obj.mode_repulse_distance * i.canvas.pxratio }, i.fn.canvasInit = function () { i.canvas.ctx = i.canvas.el.getContext(\"2d\") }, i.fn.canvasSize = function () { i.canvas.el.width = i.canvas.w, i.canvas.el.height = i.canvas.h, i && i.interactivity.events.resize && window.addEventListener(\"resize\", function () { i.canvas.w = i.canvas.el.offsetWidth, i.canvas.h = i.canvas.el.offsetHeight, i.tmp.retina && (i.canvas.w *= i.canvas.pxratio, i.canvas.h *= i.canvas.pxratio), i.canvas.el.width = i.canvas.w, i.canvas.el.height = i.canvas.h, i.particles.move.enable || (i.fn.particlesEmpty(), i.fn.particlesCreate(), i.fn.particlesDraw(), i.fn.vendors.densityAutoParticles()), i.fn.vendors.densityAutoParticles() }) }, i.fn.canvasPaint = function () { i.canvas.ctx.fillRect(0, 0, i.canvas.w, i.canvas.h) }, i.fn.canvasClear = function () { i.canvas.ctx.clearRect(0, 0, i.canvas.w, i.canvas.h) }, i.fn.particle = function (e, a, t) { if (this.radius = (i.particles.size.random ? Math.random() : 1) * i.particles.size.value, i.particles.size.anim.enable && (this.size_status = !1, this.vs = i.particles.size.anim.speed / 100, i.particles.size.anim.sync || (this.vs = this.vs * Math.random())), this.x = t ? t.x : Math.random() * i.canvas.w, this.y = t ? t.y : Math.random() * i.canvas.h, this.x > i.canvas.w - 2 * this.radius ? this.x = this.x - this.radius : this.x < 2 * this.radius && (this.x = this.x + this.radius), this.y > i.canvas.h - 2 * this.radius ? this.y = this.y - this.radius : this.y < 2 * this.radius && (this.y = this.y + this.radius), i.particles.move.bounce && i.fn.vendors.checkOverlap(this, t), this.color = {}, \"object\" == typeof e.value) if (e.value instanceof Array) { var s = e.value[Math.floor(Math.random() * i.particles.color.value.length)]; this.color.rgb = hexToRgb(s) } else void 0 != e.value.r && void 0 != e.value.g && void 0 != e.value.b && (this.color.rgb = { r: e.value.r, g: e.value.g, b: e.value.b }), void 0 != e.value.h && void 0 != e.value.s && void 0 != e.value.l && (this.color.hsl = { h: e.value.h, s: e.value.s, l: e.value.l }); else \"random\" == e.value ? this.color.rgb = { r: Math.floor(256 * Math.random()) + 0, g: Math.floor(256 * Math.random()) + 0, b: Math.floor(256 * Math.random()) + 0 } : \"string\" == typeof e.value && (this.color = e, this.color.rgb = hexToRgb(this.color.value)); this.opacity = (i.particles.opacity.random ? Math.random() : 1) * i.particles.opacity.value, i.particles.opacity.anim.enable && (this.opacity_status = !1, this.vo = i.particles.opacity.anim.speed / 100, i.particles.opacity.anim.sync || (this.vo = this.vo * Math.random())); var n = {}; switch (i.particles.move.direction) { case \"top\": n = { x: 0, y: -1 }; break; case \"top-right\": n = { x: .5, y: -.5 }; break; case \"right\": n = { x: 1, y: -0 }; break; case \"bottom-right\": n = { x: .5, y: .5 }; break; case \"bottom\": n = { x: 0, y: 1 }; break; case \"bottom-left\": n = { x: -.5, y: 1 }; break; case \"left\": n = { x: -1, y: 0 }; break; case \"top-left\": n = { x: -.5, y: -.5 }; break; default: n = { x: 0, y: 0 } }i.particles.move.straight ? (this.vx = n.x, this.vy = n.y, i.particles.move.random && (this.vx = this.vx * Math.random(), this.vy = this.vy * Math.random())) : (this.vx = n.x + Math.random() - .5, this.vy = n.y + Math.random() - .5), this.vx_i = this.vx, this.vy_i = this.vy; var r = i.particles.shape.type; if (\"object\" == typeof r) { if (r instanceof Array) { var c = r[Math.floor(Math.random() * r.length)]; this.shape = c } } else this.shape = r; if (\"image\" == this.shape) { var o = i.particles.shape; this.img = { src: o.image.src, ratio: o.image.width / o.image.height }, this.img.ratio || (this.img.ratio = 1), \"svg\" == i.tmp.img_type && void 0 != i.tmp.source_svg && (i.fn.vendors.createSvgImg(this), i.tmp.pushing && (this.img.loaded = !1)) } }, i.fn.particle.prototype.draw = function () { function e() { i.canvas.ctx.drawImage(r, a.x - t, a.y - t, 2 * t, 2 * t / a.img.ratio) } var a = this; if (void 0 != a.radius_bubble) var t = a.radius_bubble; else var t = a.radius; if (void 0 != a.opacity_bubble) var s = a.opacity_bubble; else var s = a.opacity; if (a.color.rgb) var n = \"rgba(\" + a.color.rgb.r + \",\" + a.color.rgb.g + \",\" + a.color.rgb.b + \",\" + s + \")\"; else var n = \"hsla(\" + a.color.hsl.h + \",\" + a.color.hsl.s + \"%,\" + a.color.hsl.l + \"%,\" + s + \")\"; switch (i.canvas.ctx.fillStyle = n, i.canvas.ctx.beginPath(), a.shape) { case \"circle\": i.canvas.ctx.arc(a.x, a.y, t, 0, 2 * Math.PI, !1); break; case \"edge\": i.canvas.ctx.rect(a.x - t, a.y - t, 2 * t, 2 * t); break; case \"triangle\": i.fn.vendors.drawShape(i.canvas.ctx, a.x - t, a.y + t / 1.66, 2 * t, 3, 2); break; case \"polygon\": i.fn.vendors.drawShape(i.canvas.ctx, a.x - t / (i.particles.shape.polygon.nb_sides / 3.5), a.y - t / .76, 2.66 * t / (i.particles.shape.polygon.nb_sides / 3), i.particles.shape.polygon.nb_sides, 1); break; case \"star\": i.fn.vendors.drawShape(i.canvas.ctx, a.x - 2 * t / (i.particles.shape.polygon.nb_sides / 4), a.y - t / 1.52, 2 * t * 2.66 / (i.particles.shape.polygon.nb_sides / 3), i.particles.shape.polygon.nb_sides, 2); break; case \"image\": if (\"svg\" == i.tmp.img_type) var r = a.img.obj; else var r = i.tmp.img_obj; r && e() }i.canvas.ctx.closePath(), i.particles.shape.stroke.width > 0 && (i.canvas.ctx.strokeStyle = i.particles.shape.stroke.color, i.canvas.ctx.lineWidth = i.particles.shape.stroke.width, i.canvas.ctx.stroke()), i.canvas.ctx.fill() }, i.fn.particlesCreate = function () { for (var e = 0; e < i.particles.number.value; e++)i.particles.array.push(new i.fn.particle(i.particles.color, i.particles.opacity.value)) }, i.fn.particlesUpdate = function () { for (var e = 0; e < i.particles.array.length; e++) { var a = i.particles.array[e]; if (i.particles.move.enable) { var t = i.particles.move.speed / 2; a.x += a.vx * t, a.y += a.vy * t } if (i.particles.opacity.anim.enable && (1 == a.opacity_status ? (a.opacity >= i.particles.opacity.value && (a.opacity_status = !1), a.opacity += a.vo) : (a.opacity <= i.particles.opacity.anim.opacity_min && (a.opacity_status = !0), a.opacity -= a.vo), a.opacity < 0 && (a.opacity = 0)), i.particles.size.anim.enable && (1 == a.size_status ? (a.radius >= i.particles.size.value && (a.size_status = !1), a.radius += a.vs) : (a.radius <= i.particles.size.anim.size_min && (a.size_status = !0), a.radius -= a.vs), a.radius < 0 && (a.radius = 0)), \"bounce\" == i.particles.move.out_mode) var s = { x_left: a.radius, x_right: i.canvas.w, y_top: a.radius, y_bottom: i.canvas.h }; else var s = { x_left: -a.radius, x_right: i.canvas.w + a.radius, y_top: -a.radius, y_bottom: i.canvas.h + a.radius }; switch (a.x - a.radius > i.canvas.w ? (a.x = s.x_left, a.y = Math.random() * i.canvas.h) : a.x + a.radius < 0 && (a.x = s.x_right, a.y = Math.random() * i.canvas.h), a.y - a.radius > i.canvas.h ? (a.y = s.y_top, a.x = Math.random() * i.canvas.w) : a.y + a.radius < 0 && (a.y = s.y_bottom, a.x = Math.random() * i.canvas.w), i.particles.move.out_mode) { case \"bounce\": a.x + a.radius > i.canvas.w ? a.vx = -a.vx : a.x - a.radius < 0 && (a.vx = -a.vx), a.y + a.radius > i.canvas.h ? a.vy = -a.vy : a.y - a.radius < 0 && (a.vy = -a.vy) }if (isInArray(\"grab\", i.interactivity.events.onhover.mode) && i.fn.modes.grabParticle(a), (isInArray(\"bubble\", i.interactivity.events.onhover.mode) || isInArray(\"bubble\", i.interactivity.events.onclick.mode)) && i.fn.modes.bubbleParticle(a), (isInArray(\"repulse\", i.interactivity.events.onhover.mode) || isInArray(\"repulse\", i.interactivity.events.onclick.mode)) && i.fn.modes.repulseParticle(a), i.particles.line_linked.enable || i.particles.move.attract.enable) for (var n = e + 1; n < i.particles.array.length; n++) { var r = i.particles.array[n]; i.particles.line_linked.enable && i.fn.interact.linkParticles(a, r), i.particles.move.attract.enable && i.fn.interact.attractParticles(a, r), i.particles.move.bounce && i.fn.interact.bounceParticles(a, r) } } }, i.fn.particlesDraw = function () { i.canvas.ctx.clearRect(0, 0, i.canvas.w, i.canvas.h), i.fn.particlesUpdate(); for (var e = 0; e < i.particles.array.length; e++) { var a = i.particles.array[e]; a.draw() } }, i.fn.particlesEmpty = function () { i.particles.array = [] }, i.fn.particlesRefresh = function () { cancelRequestAnimFrame(i.fn.checkAnimFrame), cancelRequestAnimFrame(i.fn.drawAnimFrame), i.tmp.source_svg = void 0, i.tmp.img_obj = void 0, i.tmp.count_svg = 0, i.fn.particlesEmpty(), i.fn.canvasClear(), i.fn.vendors.start() }, i.fn.interact.linkParticles = function (e, a) { var t = e.x - a.x, s = e.y - a.y, n = Math.sqrt(t * t + s * s); if (n <= i.particles.line_linked.distance) { var r = i.particles.line_linked.opacity - n / (1 / i.particles.line_linked.opacity) / i.particles.line_linked.distance; if (r > 0) { var c = i.particles.line_linked.color_rgb_line; i.canvas.ctx.strokeStyle = \"rgba(\" + c.r + \",\" + c.g + \",\" + c.b + \",\" + r + \")\", i.canvas.ctx.lineWidth = i.particles.line_linked.width, i.canvas.ctx.beginPath(), i.canvas.ctx.moveTo(e.x, e.y), i.canvas.ctx.lineTo(a.x, a.y), i.canvas.ctx.stroke(), i.canvas.ctx.closePath() } } }, i.fn.interact.attractParticles = function (e, a) { var t = e.x - a.x, s = e.y - a.y, n = Math.sqrt(t * t + s * s); if (n <= i.particles.line_linked.distance) { var r = t / (1e3 * i.particles.move.attract.rotateX), c = s / (1e3 * i.particles.move.attract.rotateY); e.vx -= r, e.vy -= c, a.vx += r, a.vy += c } }, i.fn.interact.bounceParticles = function (e, a) { var t = e.x - a.x, i = e.y - a.y, s = Math.sqrt(t * t + i * i), n = e.radius + a.radius; n >= s && (e.vx = -e.vx, e.vy = -e.vy, a.vx = -a.vx, a.vy = -a.vy) }, i.fn.modes.pushParticles = function (e, a) { i.tmp.pushing = !0; for (var t = 0; e > t; t++)i.particles.array.push(new i.fn.particle(i.particles.color, i.particles.opacity.value, { x: a ? a.pos_x : Math.random() * i.canvas.w, y: a ? a.pos_y : Math.random() * i.canvas.h })), t == e - 1 && (i.particles.move.enable || i.fn.particlesDraw(), i.tmp.pushing = !1) }, i.fn.modes.removeParticles = function (e) { i.particles.array.splice(0, e), i.particles.move.enable || i.fn.particlesDraw() }, i.fn.modes.bubbleParticle = function (e) { function a() { e.opacity_bubble = e.opacity, e.radius_bubble = e.radius } function t(a, t, s, n, c) { if (a != t) if (i.tmp.bubble_duration_end) { if (void 0 != s) { var o = n - p * (n - a) / i.interactivity.modes.bubble.duration, l = a - o; d = a + l, \"size\" == c && (e.radius_bubble = d), \"opacity\" == c && (e.opacity_bubble = d) } } else if (r <= i.interactivity.modes.bubble.distance) { if (void 0 != s) var v = s; else var v = n; if (v != a) { var d = n - p * (n - a) / i.interactivity.modes.bubble.duration; \"size\" == c && (e.radius_bubble = d), \"opacity\" == c && (e.opacity_bubble = d) } } else \"size\" == c && (e.radius_bubble = void 0), \"opacity\" == c && (e.opacity_bubble = void 0) } if (i.interactivity.events.onhover.enable && isInArray(\"bubble\", i.interactivity.events.onhover.mode)) { var s = e.x - i.interactivity.mouse.pos_x, n = e.y - i.interactivity.mouse.pos_y, r = Math.sqrt(s * s + n * n), c = 1 - r / i.interactivity.modes.bubble.distance; if (r <= i.interactivity.modes.bubble.distance) { if (c >= 0 && \"mousemove\" == i.interactivity.status) { if (i.interactivity.modes.bubble.size != i.particles.size.value) if (i.interactivity.modes.bubble.size > i.particles.size.value) { var o = e.radius + i.interactivity.modes.bubble.size * c; o >= 0 && (e.radius_bubble = o) } else { var l = e.radius - i.interactivity.modes.bubble.size, o = e.radius - l * c; o > 0 ? e.radius_bubble = o : e.radius_bubble = 0 } if (i.interactivity.modes.bubble.opacity != i.particles.opacity.value) if (i.interactivity.modes.bubble.opacity > i.particles.opacity.value) { var v = i.interactivity.modes.bubble.opacity * c; v > e.opacity && v <= i.interactivity.modes.bubble.opacity && (e.opacity_bubble = v) } else { var v = e.opacity - (i.particles.opacity.value - i.interactivity.modes.bubble.opacity) * c; v < e.opacity && v >= i.interactivity.modes.bubble.opacity && (e.opacity_bubble = v) } } } else a(); \"mouseleave\" == i.interactivity.status && a() } else if (i.interactivity.events.onclick.enable && isInArray(\"bubble\", i.interactivity.events.onclick.mode)) { if (i.tmp.bubble_clicking) { var s = e.x - i.interactivity.mouse.click_pos_x, n = e.y - i.interactivity.mouse.click_pos_y, r = Math.sqrt(s * s + n * n), p = ((new Date).getTime() - i.interactivity.mouse.click_time) / 1e3; p > i.interactivity.modes.bubble.duration && (i.tmp.bubble_duration_end = !0), p > 2 * i.interactivity.modes.bubble.duration && (i.tmp.bubble_clicking = !1, i.tmp.bubble_duration_end = !1) } i.tmp.bubble_clicking && (t(i.interactivity.modes.bubble.size, i.particles.size.value, e.radius_bubble, e.radius, \"size\"), t(i.interactivity.modes.bubble.opacity, i.particles.opacity.value, e.opacity_bubble, e.opacity, \"opacity\")) } }, i.fn.modes.repulseParticle = function (e) { function a() { var a = Math.atan2(d, p); if (e.vx = u * Math.cos(a), e.vy = u * Math.sin(a), \"bounce\" == i.particles.move.out_mode) { var t = { x: e.x + e.vx, y: e.y + e.vy }; t.x + e.radius > i.canvas.w ? e.vx = -e.vx : t.x - e.radius < 0 && (e.vx = -e.vx), t.y + e.radius > i.canvas.h ? e.vy = -e.vy : t.y - e.radius < 0 && (e.vy = -e.vy) } } if (i.interactivity.events.onhover.enable && isInArray(\"repulse\", i.interactivity.events.onhover.mode) && \"mousemove\" == i.interactivity.status) { var t = e.x - i.interactivity.mouse.pos_x, s = e.y - i.interactivity.mouse.pos_y, n = Math.sqrt(t * t + s * s), r = { x: t / n, y: s / n }, c = i.interactivity.modes.repulse.distance, o = 100, l = clamp(1 / c * (-1 * Math.pow(n / c, 2) + 1) * c * o, 0, 50), v = { x: e.x + r.x * l, y: e.y + r.y * l }; \"bounce\" == i.particles.move.out_mode ? (v.x - e.radius > 0 && v.x + e.radius < i.canvas.w && (e.x = v.x), v.y - e.radius > 0 && v.y + e.radius < i.canvas.h && (e.y = v.y)) : (e.x = v.x, e.y = v.y) } else if (i.interactivity.events.onclick.enable && isInArray(\"repulse\", i.interactivity.events.onclick.mode)) if (i.tmp.repulse_finish || (i.tmp.repulse_count++, i.tmp.repulse_count == i.particles.array.length && (i.tmp.repulse_finish = !0)), i.tmp.repulse_clicking) { var c = Math.pow(i.interactivity.modes.repulse.distance / 6, 3), p = i.interactivity.mouse.click_pos_x - e.x, d = i.interactivity.mouse.click_pos_y - e.y, m = p * p + d * d, u = -c / m * 1; c >= m && a() } else 0 == i.tmp.repulse_clicking && (e.vx = e.vx_i, e.vy = e.vy_i) }, i.fn.modes.grabParticle = function (e) { if (i.interactivity.events.onhover.enable && \"mousemove\" == i.interactivity.status) { var a = e.x - i.interactivity.mouse.pos_x, t = e.y - i.interactivity.mouse.pos_y, s = Math.sqrt(a * a + t * t); if (s <= i.interactivity.modes.grab.distance) { var n = i.interactivity.modes.grab.line_linked.opacity - s / (1 / i.interactivity.modes.grab.line_linked.opacity) / i.interactivity.modes.grab.distance; if (n > 0) { var r = i.particles.line_linked.color_rgb_line; i.canvas.ctx.strokeStyle = \"rgba(\" + r.r + \",\" + r.g + \",\" + r.b + \",\" + n + \")\", i.canvas.ctx.lineWidth = i.particles.line_linked.width, i.canvas.ctx.beginPath(), i.canvas.ctx.moveTo(e.x, e.y), i.canvas.ctx.lineTo(i.interactivity.mouse.pos_x, i.interactivity.mouse.pos_y), i.canvas.ctx.stroke(), i.canvas.ctx.closePath() } } } }, i.fn.vendors.eventsListeners = function () { \"window\" == i.interactivity.detect_on ? i.interactivity.el = window : i.interactivity.el = i.canvas.el, (i.interactivity.events.onhover.enable || i.interactivity.events.onclick.enable) && (i.interactivity.el.addEventListener(\"mousemove\", function (e) { if (i.interactivity.el == window) var a = e.clientX, t = e.clientY; else var a = e.offsetX || e.clientX, t = e.offsetY || e.clientY; i.interactivity.mouse.pos_x = a, i.interactivity.mouse.pos_y = t, i.tmp.retina && (i.interactivity.mouse.pos_x *= i.canvas.pxratio, i.interactivity.mouse.pos_y *= i.canvas.pxratio), i.interactivity.status = \"mousemove\" }), i.interactivity.el.addEventListener(\"mouseleave\", function (e) { i.interactivity.mouse.pos_x = null, i.interactivity.mouse.pos_y = null, i.interactivity.status = \"mouseleave\" })), i.interactivity.events.onclick.enable && i.interactivity.el.addEventListener(\"click\", function () { if (i.interactivity.mouse.click_pos_x = i.interactivity.mouse.pos_x, i.interactivity.mouse.click_pos_y = i.interactivity.mouse.pos_y, i.interactivity.mouse.click_time = (new Date).getTime(), i.interactivity.events.onclick.enable) switch (i.interactivity.events.onclick.mode) { case \"push\": i.particles.move.enable ? i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb, i.interactivity.mouse) : 1 == i.interactivity.modes.push.particles_nb ? i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb, i.interactivity.mouse) : i.interactivity.modes.push.particles_nb > 1 && i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb); break; case \"remove\": i.fn.modes.removeParticles(i.interactivity.modes.remove.particles_nb); break; case \"bubble\": i.tmp.bubble_clicking = !0; break; case \"repulse\": i.tmp.repulse_clicking = !0, i.tmp.repulse_count = 0, i.tmp.repulse_finish = !1, setTimeout(function () { i.tmp.repulse_clicking = !1 }, 1e3 * i.interactivity.modes.repulse.duration) } }) }, i.fn.vendors.densityAutoParticles = function () { if (i.particles.number.density.enable) { var e = i.canvas.el.width * i.canvas.el.height / 1e3; i.tmp.retina && (e /= 2 * i.canvas.pxratio); var a = e * i.particles.number.value / i.particles.number.density.value_area, t = i.particles.array.length - a; 0 > t ? i.fn.modes.pushParticles(Math.abs(t)) : i.fn.modes.removeParticles(t) } }, i.fn.vendors.checkOverlap = function (e, a) { for (var t = 0; t < i.particles.array.length; t++) { var s = i.particles.array[t], n = e.x - s.x, r = e.y - s.y, c = Math.sqrt(n * n + r * r); c <= e.radius + s.radius && (e.x = a ? a.x : Math.random() * i.canvas.w, e.y = a ? a.y : Math.random() * i.canvas.h, i.fn.vendors.checkOverlap(e)) } }, i.fn.vendors.createSvgImg = function (e) { var a = i.tmp.source_svg, t = /#([0-9A-F]{3,6})/gi, s = a.replace(t, function (a, t, i, s) { if (e.color.rgb) var n = \"rgba(\" + e.color.rgb.r + \",\" + e.color.rgb.g + \",\" + e.color.rgb.b + \",\" + e.opacity + \")\"; else var n = \"hsla(\" + e.color.hsl.h + \",\" + e.color.hsl.s + \"%,\" + e.color.hsl.l + \"%,\" + e.opacity + \")\"; return n }), n = new Blob([s], { type: \"image/svg+xml;charset=utf-8\" }), r = window.URL || window.webkitURL || window, c = r.createObjectURL(n), o = new Image; o.addEventListener(\"load\", function () { e.img.obj = o, e.img.loaded = !0, r.revokeObjectURL(c), i.tmp.count_svg++ }), o.src = c }, i.fn.vendors.destroypJS = function () { cancelAnimationFrame(i.fn.drawAnimFrame), t.remove(), pJSDom = null }, i.fn.vendors.drawShape = function (e, a, t, i, s, n) { var r = s * n, c = s / n, o = 180 * (c - 2) / c, l = Math.PI - Math.PI * o / 180; e.save(), e.beginPath(), e.translate(a, t), e.moveTo(0, 0); for (var v = 0; r > v; v++)e.lineTo(i, 0), e.translate(i, 0), e.rotate(l); e.fill(), e.restore() }, i.fn.vendors.exportImg = function () { window.open(i.canvas.el.toDataURL(\"image/png\"), \"_blank\") }, i.fn.vendors.loadImg = function (e) { if (i.tmp.img_error = void 0, \"\" != i.particles.shape.image.src) if (\"svg\" == e) { var a = new XMLHttpRequest; a.open(\"GET\", i.particles.shape.image.src), a.onreadystatechange = function (e) { 4 == a.readyState && (200 == a.status ? (i.tmp.source_svg = e.currentTarget.response, i.fn.vendors.checkBeforeDraw()) : (console.log(\"Error pJS - Image not found\"), i.tmp.img_error = !0)) }, a.send() } else { var t = new Image; t.addEventListener(\"load\", function () { i.tmp.img_obj = t, i.fn.vendors.checkBeforeDraw() }), t.src = i.particles.shape.image.src } else console.log(\"Error pJS - No image.src\"), i.tmp.img_error = !0 }, i.fn.vendors.draw = function () { \"image\" == i.particles.shape.type ? \"svg\" == i.tmp.img_type ? i.tmp.count_svg >= i.particles.number.value ? (i.fn.particlesDraw(), i.particles.move.enable ? i.fn.drawAnimFrame = requestAnimFrame(i.fn.vendors.draw) : cancelRequestAnimFrame(i.fn.drawAnimFrame)) : i.tmp.img_error || (i.fn.drawAnimFrame = requestAnimFrame(i.fn.vendors.draw)) : void 0 != i.tmp.img_obj ? (i.fn.particlesDraw(), i.particles.move.enable ? i.fn.drawAnimFrame = requestAnimFrame(i.fn.vendors.draw) : cancelRequestAnimFrame(i.fn.drawAnimFrame)) : i.tmp.img_error || (i.fn.drawAnimFrame = requestAnimFrame(i.fn.vendors.draw)) : (i.fn.particlesDraw(), i.particles.move.enable ? i.fn.drawAnimFrame = requestAnimFrame(i.fn.vendors.draw) : cancelRequestAnimFrame(i.fn.drawAnimFrame)) }, i.fn.vendors.checkBeforeDraw = function () { \"image\" == i.particles.shape.type ? \"svg\" == i.tmp.img_type && void 0 == i.tmp.source_svg ? i.tmp.checkAnimFrame = requestAnimFrame(check) : (cancelRequestAnimFrame(i.tmp.checkAnimFrame), i.tmp.img_error || (i.fn.vendors.init(), i.fn.vendors.draw())) : (i.fn.vendors.init(), i.fn.vendors.draw()) }, i.fn.vendors.init = function () { i.fn.retinaInit(), i.fn.canvasInit(), i.fn.canvasSize(), i.fn.canvasPaint(), i.fn.particlesCreate(), i.fn.vendors.densityAutoParticles(), i.particles.line_linked.color_rgb_line = hexToRgb(i.particles.line_linked.color) }, i.fn.vendors.start = function () { isInArray(\"image\", i.particles.shape.type) ? (i.tmp.img_type = i.particles.shape.image.src.substr(i.particles.shape.image.src.length - 3), i.fn.vendors.loadImg(i.tmp.img_type)) : i.fn.vendors.checkBeforeDraw() }, i.fn.vendors.eventsListeners(), i.fn.vendors.start() }; Object.deepExtend = function (e, a) { for (var t in a) a[t] && a[t].constructor && a[t].constructor === Object ? (e[t] = e[t] || {}, arguments.callee(e[t], a[t])) : e[t] = a[t]; return e }, window.requestAnimFrame = function () { return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e) { window.setTimeout(e, 1e3 / 60) } }(), window.cancelRequestAnimFrame = function () { return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || clearTimeout }(), window.pJSDom = [], window.particlesJS = function (e, a) { \"string\" != typeof e && (a = e, e = \"particles-js\"), e || (e = \"particles-js\"); var t = document.getElementById(e), i = \"particles-js-canvas-el\", s = t.getElementsByClassName(i); if (s.length) for (; s.length > 0;)t.removeChild(s[0]); var n = document.createElement(\"canvas\"); n.className = i, n.style.width = \"100%\", n.style.height = \"100%\"; var r = document.getElementById(e).appendChild(n); null != r && pJSDom.push(new pJS(e, a)) }, window.particlesJS.load = function (e, a, t) { var i = new XMLHttpRequest; i.open(\"GET\", a), i.onreadystatechange = function (a) { if (4 == i.readyState) if (200 == i.status) { var s = JSON.parse(a.currentTarget.response); window.particlesJS(e, s), t && t() } else console.log(\"Error pJS - XMLHttpRequest status: \" + i.status), console.log(\"Error pJS - File config not found\") }, i.send() };\r\n\r\n</script>\r\n<script>  var coll = document.getElementsByClassName(\"collapsible\");\r\n  var i;\r\n\r\n  for (i = 0; i < coll.length; i++) {\r\n    coll[i].addEventListener(\"click\", function () {\r\n      this.classList.toggle(\"active\");\r\n      var content = this.nextElementSibling;\r\n      if (content.style.display === \"block\") {\r\n        content.style.display = \"none\";\r\n      } else {\r\n        content.style.display = \"block\";\r\n      }\r\n    });\r\n  }</script>\r\n<div class=\"toolbar\" role=\"banner\">\r\n  <a href=\"www.google.com\"><img class=\"logo_p\" width=\"80\" alt=\"Logo\" src=\"assets/img/EM.png\" /></a>\r\n  <span>Portafolio</span>\r\n  <hr>\r\n\r\n  <div class=\"spacer\"></div>\r\n  <a aria-label=\"Instagram Eduardo\" target=\"_blank\" href=\"https://www.instagram.com/eduardo.ivr/?hl=es-la\"\r\n    title=\"Instagram\">\r\n    <img src=\"assets/img/insta.png\" width=\"50\">\r\n  </a>\r\n</div>\r\n<app-marco-move></app-marco-move>\r\n\r\n<div class=\"content\" role=\"main\">\r\n\r\n  <!--///s\r\n  <div class=\"card highlight-card card-small\">\r\n\r\n    <span>{{ title }}</span>\r\n\r\n  </div>\r\n\r\n///-->\r\n\r\n  <h1 class=\"boutme\"> Web Apps Development</h1>\r\n  <h1 class=\"boutme\"> Wordpress Specialist</h1>\r\n  <h1 class=\"boutme\"> Front-End Development</h1>\r\n\r\n  <app-collapser></app-collapser>\r\n\r\n  <p class=\"skills\">__________________________</p>\r\n  <app-botones-contacto></app-botones-contacto>\r\n  <p class=\"skills\">Knoweledge & Experiences<br> Frameworks, Libraries, Languages and CMS</p>\r\n  <div class=\"rowprincipal\">\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"nglogo\" src=\"assets/img/ng.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='25' bufferValue='50'></mat-progress-bar>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"njslogo\" src=\"assets/img/nodejs.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='10' bufferValue='20'></mat-progress-bar>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"wplogo\" src=\"assets/img/wp.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='80' bufferValue='95'></mat-progress-bar>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"htcsjs\" src=\"assets/img/3pw.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='85' bufferValue='95'></mat-progress-bar>\r\n    </div>\r\n  </div>\r\n  <div class=\"rowprincipal\">\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"cslogo\" src=\"assets/img/csharp.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='25' bufferValue='40'></mat-progress-bar>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"phplogo\" src=\"assets/img/php.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='35' bufferValue='50'></mat-progress-bar>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"mdblogo\" src=\"assets/img/mysql.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='10' bufferValue='20'></mat-progress-bar>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" target=\"_blank\" rel=\"noopener\">\r\n        <img class=\"jvlogo\" src=\"assets/img/js.png\">\r\n      </a>\r\n      <mat-progress-bar mode='buffer' value='40' bufferValue='60'></mat-progress-bar>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n  <app-presentacion></app-presentacion>\r\n  <p class=\"skills\">__________________________</p>\r\n\r\n  <footer>\r\n    <soul></soul>\r\n    <p class=\"skills\">Last Finished Works</p>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" href=\"https://pierrotdesign.com\" target=\"_blank\">\r\n        <img class=\"dplogo\" src=\"assets/img/pierrot.png\">\r\n      </a>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" href=\"https://islasdelsol.com.ve\" target=\"_blank\">\r\n        <img class=\"dplogo\" src=\"assets/img/islas.png\">\r\n      </a>\r\n    </div>\r\n    <div class=\"card-container\">\r\n      <a class=\"card\" href=\"https://galeriaplusarte.com\" target=\"_blank\">\r\n        <img class=\"dplogo\" src=\"assets/img/galeria.jpg\">\r\n      </a>\r\n    </div>\r\n\r\n  </footer>\r\n\r\n\r\n\r\n</div>","import { Component, ViewEncapsulation} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [\"app.component.css\"],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppComponent {\r\n\r\n  isCollapsed = false;\r\n  title = 'Eduardo José Luis Mosqueda Acosta';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ParticlesModule } from 'angular-particle';\r\nimport { AppComponent } from './app.component';\r\nimport { PresentacionComponent } from './components/presentacion/presentacion.component';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { BotonesContactoComponent } from './botones-contacto/botones-contacto.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SoulComponent } from './soul/soul.component';\r\nimport { MarcoMoveComponent } from './marco-move/marco-move.component';\r\nimport { AppcollapserComponent } from './appcollapser/appcollapser.component';\r\nimport { CollapserComponent } from './collapser/collapser.component';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PresentacionComponent,\r\n    BotonesContactoComponent,\r\n    SoulComponent,\r\n    MarcoMoveComponent,\r\n    AppcollapserComponent,\r\n    CollapserComponent\r\n\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ParticlesModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n\r\n})\r\nexport class AppModule { }\r\n","\r\n<a href=\"https://api.whatsapp.com/send?phone=+584144705811&text=Saludos, ví tu portafolio en línea\" target=\"_blank\"><img class=\"wpp\" src=\"assets/img/wppdeg.png\"></a>\r\n<a href=\"https://t.me/EJLMA\" target=\"_blank\"><img class=\"tgm\" src=\"assets/img/tgmdeg.png\"></a>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-botones-contacto',\r\n  templateUrl: './botones-contacto.component.html',\r\n  styleUrls: ['botones-contacto.component.css']\r\n})\r\nexport class BotonesContactoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n<button (click)=\"mostrar()\"><i class=\"toggabre material-icons\">dehaze</i></button>\r\n<div [@clicMuestra]=\"estado\" class=\"tablas\">\r\n\r\n      <p class=\"desarrollo\">Hi, <br>I'm a web developer highly motivated and prepared to make part of the most\r\n            challenging\r\n            projects.</p>\r\n      <p class=\"desarrollo\">I studied network and communications engineering, which introduced me to programming and\r\n            later in 2019 I\r\n            started to\r\n            get into web development creating wordpress pages on my own and then working as a freelancer while\r\n            strengthening my\r\n            basic knowledge (HTML, CSS, JS).</p>\r\n\r\n      <p class=\"desarrollo\">Since 2020 and until now I have been working at T4E Design. A digital marketing agency where\r\n            I\r\n            have\r\n            learned more in depth the use of PHP and MySQL as these have been necessary to meet needs with a certain\r\n            degree of\r\n            complexity for e-commerce based on Wordpress/Woocommerce.</p>\r\n\r\n      <p class=\"desarrollo\">Although my knowledge is not the most advanced, I have a strong foundation, I am still\r\n            learning\r\n            every day and I know that I will be able to make valuable contributions to the team and the projects that\r\n            come our way. </p>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { trigger, state, style, transition, animate, group } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-collapser',\r\n  templateUrl: './collapser.component.html',\r\n  styleUrls: ['collapser.component.css'],\r\n  animations: [\r\n    trigger(\"clicMuestra\", [\r\n      state(\"active\", style({\r\n\r\n        backgroundColor: \"white\",\r\n        height: 100,\r\n        padding: 10\r\n\r\n      })),\r\n      state(\"no-active\", style({\r\n        backgroundColor: \"rgba(71, 71, 71, 0)\",\r\n        height: 0,\r\n        color: \"rgba(71, 71, 71, 0)\"\r\n\r\n\r\n      })),\r\n      transition(\"active<=>no-active\",\r\n        animate(\"0.2s ease-in-out\"),\r\n      )\r\n    ])\r\n  ]\r\n})\r\nexport class CollapserComponent implements OnInit {\r\n  estado = \"no-active\";\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  mostrar() {\r\n    this.estado = this.estado === \"active\" ? \"no-active\" : \"active\";\r\n  }\r\n}\r\n","\r\n\r\n<particles [params]=\"myParams\" [style]=\"myStyle\" [width]=\"width\" [height]=\"height\"></particles>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare var particlesJS: any;\r\n@Component({\r\n  selector: 'app-presentacion',\r\n  templateUrl: './presentacion.component.html',\r\n  styleUrls: ['presentacion.component.css']\r\n})\r\n\r\nexport class PresentacionComponent implements OnInit {\r\n  myStyle: object = {};\r\n      myParams: object = {};\r\n      width: number = 100;\r\n      height: number = 100;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.myStyle = {\r\n                'position': 'absolute',\r\n                'width': '100%',\r\n                'height': \"100%\",\r\n                'z-index': -1,\r\n                'top': 0,\r\n                'left': 0,\r\n                'right': 0,\r\n                'bottom': 0,\r\n            };\r\n            this.myParams = {\r\n            particles: {\r\n                number: {\r\n                    value: 25,\r\n                    density:{\r\n                      enable:false,\r\n                      value_area:100,\r\n                    }\r\n                },\r\n                color: {\r\n                    value: '#ff0000'\r\n                },\r\n                shape: {\r\n                    type: 'circle',\r\n                    stroke:{\r\n                      width:1,\r\n                      color:\"#222222\",\r\n                    },\r\n                },\r\n\r\n        },\r\n        interactivity:{\r\n          detect_on:\"canva\",\r\n          events:{\r\n            onclick:{\r\n              enable:true,\r\n              mode:\"repulse\"\r\n            },\r\n            onhover:{\r\n              enable:true,\r\n              mode:\"grab\"\r\n            }\r\n          }\r\n\r\n        },\r\n    };\r\n    particlesJS.load('particles-js', 'particles.json', null)\r\n  }\r\n}\r\n","<div class=\"bb\">\r\n    <h1 class=\"nombref\">Eduardo</h1>\r\n    <h1 class=\"nombref\">Mosqueda</h1>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-marco-move',\r\n  templateUrl: './marco-move.component.html',\r\n  styleUrls: ['./marco-move.component.scss']\r\n})\r\nexport class MarcoMoveComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"view\">\r\n    <div class=\"plane main\">\r\n        <div class=\"circle\"></div>\r\n        <div class=\"circle\"></div>\r\n        <div class=\"circle\"></div>\r\n        <div class=\"circle\"></div>\r\n        <div class=\"circle\"></div>\r\n        <div class=\"circle\"></div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'soul',\r\n  templateUrl: './soul.component.html',\r\n  styleUrls: ['soul.component.sass']\r\n})\r\nexport class SoulComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}